module Part2

open FStar.IO
open FStar.Printf
open FStar.All
open FStar.Heap
open FStar.ST
open FStar.Tactics
  
val horizontal : ref int
val depth : ref int
val aim : ref int

let horizontal = ST.alloc 0
let depth = ST.alloc 0
let aim = ST.alloc 0

let two_element_set (#a:eqtype) (x1:a) (x2:a) : Set.set a =
 Set.union (Set.singleton x1) (Set.singleton x2)

let forward (d:int{d>0}) : ST unit
  (requires (fun h0 -> contains h0 horizontal /\ contains h0 aim))
  (ensures (fun h0 _ h1 ->
                        // Can't prove this -- why?
                        // (sel h0 horizontal) < (sel h1 horizontal) /\
                        (modifies (two_element_set (addr_of horizontal) 
                                                   (addr_of depth)) h0 h1))) =
    let old_horiz = !horizontal in (                                                   
      depth := !depth + op_Multiply !aim d;
      assert( !horizontal = old_horiz );
      horizontal := !horizontal + d;
      assert( !horizontal > old_horiz )
    )
        
let down (d:int{d>0}) : ST unit
  (requires (fun h0 -> contains h0 aim))
  (ensures (fun h0 _ h1 -> (modifies (only aim) h0 h1)
                       /\ (sel h0 aim) < (sel h1 aim))) =
    aim := !aim + d

let up (d:int{d>0}) : ST unit
  (requires (fun h0 -> contains h0 aim))
  (ensures (fun h0 _ h1 -> (modifies (only aim) h0 h1)
                       /\ (sel h0 aim) > (sel h1 aim))) =
    aim := !aim - d

let print_state () : ML unit =
  print_string (sprintf "H=%d D=%d A=%d\n" !horizontal !depth !aim )

let example () : ML unit =
 horizontal := 0;
 depth := 0;
 aim := 0;
 
 forward 5;
 down 5;
 forward 8;
 up 3;
 down 8;
 forward 2

#set-options "--z3rlimit 300"
let navigate () : St unit =
 horizontal := 0;
 depth := 0;
 aim := 0;
 
forward 5;
forward 2;
forward 9;
down 2;
forward 9;
forward 3;
forward 2;
down 6;
forward 3;
forward 3;
down 3;
down 3;
forward 8;
down 5;
forward 7;
forward 9;
forward 9;
forward 6;
forward 9;
forward 3;
forward 3;
forward 1;
forward 7;
down 6;
forward 7;
forward 4;
down 3;
down 1;
forward 4;
down 7;
down 2;
down 8;
forward 9;
down 5;
down 2;
forward 6;
up 4;
down 3;
down 1;
down 6;
down 7;
forward 6;
up 2;
forward 2;
down 9;
down 3;
forward 7;
up 3;
up 7;
forward 8;
forward 7;
down 4;
up 8;
up 1;
forward 4;
down 6;
forward 9;
forward 3;
down 1;
down 1;
forward 2;
forward 4;
forward 3;
up 2;
forward 1;
down 8;
forward 4;
down 5;
forward 9;
up 1;
forward 3;
forward 6;
up 8;
forward 1;
forward 7;
up 9;
down 3;
up 7;
down 1;
forward 5;
forward 3;
forward 7;
down 5;
down 1;
down 2;
down 4;
down 5;
down 5;
down 8;
up 9;
down 7;
down 7;
down 6;
forward 3;
forward 5;
forward 1;
forward 8;
up 4;
down 8;
down 3;
down 1;
down 9;
down 3;
down 9;
down 8;
down 2;
forward 1;
forward 7;
forward 1;
down 3;
down 1;
up 3;
down 6;
forward 6;
forward 6;
down 8;
forward 3;
down 1;
forward 2;
down 4;
down 7;
up 8;
forward 4;
down 4;
up 1;
forward 6;
down 6;
forward 5;
forward 9;
up 5;
down 3;
up 9;
down 6;
up 3;
down 9;
down 4;
down 2;
forward 3;
down 6;
down 7;
down 9;
forward 7;
forward 2;
forward 5;
up 6;
down 8;
forward 1;
down 2;
forward 8;
down 5;
down 2;
up 4;
forward 9;
up 4;
down 4;
down 2;
forward 3;
up 2;
down 5;
down 9;
up 4;
forward 9;
down 5;
down 2;
down 2;
forward 9;
up 9;
forward 6;
up 7;
down 2;
forward 8;
down 1;
forward 2;
down 3;
up 6;
down 4;
forward 5;
up 4;
forward 5;
forward 9;
forward 9;
forward 5;
down 1;
down 7;
forward 6;
forward 9;
forward 3;
forward 4;
up 8;
down 1;
up 1;
down 3;
up 1;
down 5;
forward 6;
up 5;
up 6;
down 9;
forward 7;
down 7;
forward 1;
forward 2;
up 4;
forward 4;
down 9;
up 4;
down 6;
forward 1;
up 9;
forward 2;
down 8;
forward 6;
forward 6;
down 6;
forward 5;
forward 9;
up 8;
down 4;
forward 8;
up 6;
down 4;
up 9;
forward 2;
down 8;
down 6;
forward 2;
down 3;
forward 1;
forward 3;
forward 2;
up 4;
down 6;
up 6;
down 4;
down 2;
forward 1;
up 7;
forward 9;
forward 9;
forward 7;
down 1;
down 9;
forward 5;
forward 4;
forward 1;
forward 4;
down 5;
forward 6;
forward 8;
down 5;
down 7;
up 2;
up 1;
forward 5;
down 5;
down 1;
down 5;
down 8;
down 8;
down 5;
forward 7;
down 6;
down 2;
forward 9;
forward 1;
forward 3;
forward 4;
up 3;
down 4;
up 7;
forward 8;
forward 7;
up 4;
down 9;
forward 7;
forward 6;
up 1;
down 1;
up 6;
down 5;
up 1;
forward 2;
down 2;
forward 3;
down 6;
up 5;
up 4;
down 8;
down 5;
down 3;
down 4;
up 3;
down 3;
down 2;
down 7;
up 2;
down 8;
forward 5;
up 1;
forward 9;
down 6;
down 6;
down 8;
up 4;
forward 9;
forward 8;
up 7;
down 9;
down 4;
forward 9;
forward 9;
up 2;
down 1;
forward 1;
forward 4;
forward 2;
forward 9;
down 1;
down 3;
down 1;
down 3;
up 5;
down 2;
forward 4;
down 2;
forward 1;
down 6;
up 9;
down 3;
forward 1;
forward 5;
forward 8;
down 5;
down 6;
down 9;
forward 4;
down 7;
up 8;
forward 8;
down 9;
forward 6;
down 8;
up 3;
forward 4;
up 9;
down 7;
up 7;
forward 6;
forward 1;
up 9;
down 7;
up 7;
down 5;
forward 6;
up 7;
down 8;
down 8;
forward 4;
up 4;
forward 1;
forward 6;
down 4;
up 9;
forward 4;
up 1;
up 8;
up 6;
forward 9;
forward 4;
forward 7;
up 1;
down 5;
up 5;
up 5;
forward 4;
down 9;
up 8;
down 6;
down 3;
down 6;
forward 2;
up 1;
forward 3;
up 8;
down 1;
forward 5;
down 9;
forward 4;
up 5;
forward 3;
forward 2;
down 8;
down 9;
up 6;
down 9;
down 7;
forward 5;
forward 4;
forward 9;
up 8;
forward 3;
down 7;
forward 9;
down 8;
forward 4;
forward 8;
up 9;
up 9;
down 6;
forward 5;
forward 5;
forward 5;
up 2;
up 2;
up 1;
down 6;
forward 2;
forward 2;
down 8;
down 6;
up 2;
forward 1;
down 1;
up 5;
forward 7;
down 2;
forward 1;
forward 3;
down 5;
down 7;
forward 8;
forward 4;
forward 9;
up 1;
up 7;
up 9;
forward 3;
up 1;
forward 6;
forward 3;
forward 9;
up 9;
down 6;
forward 8;
up 6;
down 9;
forward 3;
forward 7;
down 9;
forward 4;
forward 5;
forward 7;
down 1;
down 4;
down 3;
forward 6;
down 3;
forward 7;
forward 8;
down 1;
forward 3;
down 4;
up 7;
forward 2;
forward 8;
down 6;
up 3;
down 2;
forward 9;
forward 5;
forward 7;
up 2;
up 6;
down 9;
forward 1;
up 5;
forward 1;
up 6;
up 2;
up 1;
forward 6;
down 8;
forward 7;
down 5;
forward 3;
down 9;
down 4;
forward 3;
down 1;
up 1;
up 7;
forward 4;
down 6;
forward 3;
forward 2;
down 8;
forward 9;
forward 6;
up 3;
down 3;
down 1;
down 7;
up 8;
up 2;
up 8;
forward 6;
forward 8;
forward 6;
forward 4;
down 6;
forward 6;
forward 6;
forward 1;
down 2;
forward 2;
forward 6;
down 1;
up 6;
forward 3;
forward 9;
forward 6;
down 2;
forward 2;
up 4;
down 2;
up 4;
forward 2;
forward 2;
forward 3;
up 1;
forward 8;
forward 3;
forward 3;
forward 1;
down 5;
down 9;
forward 4;
down 1;
forward 5;
forward 2;
down 5;
forward 6;
forward 3;
up 3;
forward 6;
forward 9;
forward 5;
down 2;
down 2;
down 7;
forward 8;
down 1;
down 5;
down 9;
up 3;
up 5;
up 4;
forward 3;
down 9;
down 2;
down 8;
down 5;
down 2;
forward 4;
up 3;
down 5;
up 3;
down 8;
down 7;
up 1;
forward 2;
forward 1;
down 2;
up 1;
up 5;
down 8;
down 3;
up 9;
forward 2;
down 8;
down 4;
down 3;
forward 3;
forward 7;
up 1;
down 9;
forward 1;
down 6;
up 3;
up 5;
down 6;
up 4;
forward 7;
up 4;
forward 9;
up 4;
forward 4;
down 7;
down 2;
down 8;
up 3;
down 7;
down 4;
up 5;
forward 8;
down 8;
down 1;
forward 7;
up 9;
down 5;
up 8;
down 1;
up 3;
forward 8;
up 4;
down 1;
up 1;
up 7;
forward 3;
forward 6;
forward 5;
forward 2;
down 4;
forward 2;
down 7;
up 7;
up 6;
down 4;
forward 4;
forward 9;
forward 7;
down 4;
down 6;
forward 5;
down 2;
down 6;
down 2;
down 2;
forward 9;
up 5;
forward 9;
down 3;
down 6;
down 1;
forward 5;
down 5;
forward 7;
forward 9;
up 8;
forward 6;
down 6;
down 2;
forward 8;
forward 5;
up 9;
up 4;
forward 1;
forward 2;
forward 2;
up 9;
down 6;
forward 6;
forward 8;
up 5;
up 7;
forward 4;
down 3;
forward 1;
up 6;
up 9;
forward 6;
up 8;
forward 5;
down 4;
forward 1;
down 3;
forward 1;
forward 6;
forward 2;
up 4;
down 6;
forward 9;
down 2;
forward 4;
down 4;
forward 3;
down 5;
down 2;
forward 2;
forward 2;
up 1;
forward 1;
down 7;
down 8;
up 6;
forward 8;
forward 5;
forward 8;
down 6;
forward 5;
down 3;
up 3;
forward 4;
up 9;
forward 8;
forward 4;
down 3;
forward 6;
up 6;
down 2;
down 7;
down 3;
down 2;
down 8;
forward 5;
down 9;
up 6;
down 6;
forward 8;
down 1;
forward 8;
down 1;
down 1;
forward 3;
forward 9;
down 6;
forward 7;
down 4;
forward 1;
forward 4;
forward 3;
down 6;
forward 5;
down 5;
forward 1;
forward 3;
forward 8;
down 9;
up 8;
up 6;
up 6;
forward 2;
forward 9;
down 4;
down 8;
forward 6;
up 1;
down 2;
down 6;
forward 6;
forward 2;
up 8;
forward 6;
down 9;
down 1;
forward 7;
forward 6;
forward 5;
forward 6;
down 6;
up 7;
down 9;
forward 9;
forward 3;
forward 5;
down 4;
down 1;
down 7;
up 3;
up 7;
forward 6;
forward 8;
down 7;
down 4;
forward 7;
down 6;
up 1;
forward 4;
down 2;
forward 4;
forward 3;
forward 4;
forward 4;
up 3;
down 8;
down 4;
down 1;
down 8;
down 3;
up 9;
down 4;
forward 7;
down 6;
up 2;
down 8;
up 9;
down 6;
forward 1;
down 3;
forward 9;
down 9;
forward 1;
down 5;
up 5;
up 1;
forward 8;
down 8;
down 9;
down 5;
down 2;
down 5;
forward 3;
down 9;
forward 4;
forward 4;
up 2;
forward 8;
forward 4;
forward 1;
down 5;
forward 5;
down 5;
forward 6;
forward 4;
up 5;
down 9;
up 3;
up 8;
forward 5;
forward 9;
up 6;
forward 6;
down 5;
forward 7;
down 8;
down 7;
down 9;
forward 4;
down 8;
forward 4;
down 5;
forward 6;
forward 4;
down 7;
down 5;
forward 4;
down 3;
up 4;
forward 3;
up 9;
down 8;
forward 9;
forward 6;
forward 9;
down 1;
forward 2;
up 5;
down 9;
down 2;
down 9;
up 8;
forward 7;
forward 8;
forward 4;
down 1;
up 8;
forward 8;
down 8;
down 4;
forward 9;
down 3;
forward 7;
forward 9;
down 5;
forward 7;
forward 1;
forward 5;
forward 2;
down 4;
forward 7;
down 6;
forward 3;
down 9;
forward 3;
down 5;
up 6;
up 3;
forward 1;
up 9;
down 1;
forward 2;
down 8;
down 7;
up 9;
up 2;
down 5;
up 9;
forward 9;
forward 9;
down 1;
forward 5;
up 5;
forward 1;
up 1;
down 3;
forward 3;
down 3;
forward 3;
up 5;
up 4;
down 7;
down 7;
down 4;
forward 7;
down 6;
forward 1;
up 1;
down 8;
forward 4;
down 3;
forward 9;
up 6;
forward 6;
forward 3;
up 9;
down 9;
forward 4;
up 5;
down 3;
down 8;
down 3;
down 3;
forward 4;
forward 6;
forward 4;
up 2;
up 3;
up 5;
down 5;
down 6;
forward 5;
forward 4;
down 1;
down 2;
up 8;
down 2;
down 1;
up 4;
forward 5;
forward 8;
forward 8;
forward 5;
down 3;
forward 4;
up 8;
forward 7;
forward 4;
down 9;
down 6;
forward 2;
down 7;
forward 6;
up 7;
up 1;
up 4;
forward 2;
forward 9;
forward 7;
up 5;
forward 2;
up 5;
forward 1;
forward 2;
forward 4;
down 6;
forward 2;
up 6;
up 7;
forward 3;
forward 2;
forward 6;
forward 4;
forward 9;
forward 6;
up 6;
forward 5;
up 7;
up 5;
down 6;
down 2;
down 1;
forward 7;
down 5;
down 1;
down 7;
forward 8;
forward 8;
forward 5;
down 9;
forward 6

let run () : ML unit =
  // example();
  navigate();
  let v = op_Multiply !horizontal !depth in
    print_string (sprintf "%d\n" v)

let _ = run()

